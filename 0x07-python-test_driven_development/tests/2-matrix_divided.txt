The ''2-matrix_divided'' module
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Importing the function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

This function divides all elements of a matrix:
    >>> matrix = [
    ...     [3, 6, 9],
    ...     [12, 15, 18]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Testcase for maximum of two decimal places:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Testcase for integers:
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

Testcase for float numbers.
    >>> matrix = [
    ...     [1.1, -2.2, 3.3],
    ...     [4.4, 5.5, -6.6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

Testcase for integers and floats combined:
    >>> matrix = [
    ...     [1, -2.2, 3, 4.4, 5],
    ...     [-6.6, 7.00, 8, 9.999, 10]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Testcase for empty list:
    >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testcase for empty list of lists:
    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 3))
    [[]]

Testcase for matrix not a list of integers or floats:
    >>> matrix = "not a list"
    >>> print(matrix_divided(matrix, 3))
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testcase for string:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, "not a number", 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testcase for same size:
    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    TypeError: Each row of the matrix must have the same size

Testcase for div number:
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "not a number"))
    TypeError: div must be a number
