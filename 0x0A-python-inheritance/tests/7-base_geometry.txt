The ``7-base_geometry`` module
=====================================================================================

Test for 7-base_geometry.py using ``BaseGeometry``
------------------------------------------------------------------------------------

Testcase 0: Importing class from the module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>>

-----------------------------------------------------------------------------------

Testcase 1: Trying to print the area
>>> bg = BaseGeometry()
>>> bg.area()
    Exception: area() is not implemented

---------------------------------------------------------------------------------

Testcase 2: Trying to pass a non-integer argument
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "5")
    TypeError: name must be an integer

---------------------------------------------------------------------------------

Testcase 3: Trying to pass a boolean value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", True)
    TypeError: name must be an integer

-------------------------------------------------------------------------------

Testcase 4: Trying to pass a negative value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", -5)
    ValueError: name must be greater than 0

--------------------------------------------------------------------------------

Testcase 5: Trying to pass a zero value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 0)
    ValueError: name must be greater than 0

--------------------------------------------------------------------------------

Testcase 6: Passing a positive value
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 5)

---------------------------------------------------------------------------------

Testcase 7: Passing one argument to integer_validator
>>> bg = BaseGeometry()
>>> bg.integer_validator("name")
    TypeError: integer_validator() missing 1 required positional argument: 'value'

------------------------------------------------------------------------------------------

Testcase 8: Integer_validator with no arguments
>>> bg = BaseGeometry()
>>> bg.integer_validator()
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

------------------------------------------------------------------------------------------

Testcase 9: Passing three arguments to integer_validator
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 1, 2)
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

-----------------------------------------------------------------------------------------

Testcase 10: Passing one argument to area method
>>> bg = BaseGeometry()
>>> bg.area(5)
    TypeError: area() takes 1 positional argument but 2 were given

----------------------------------------------------------------------------------------

Testcase 11: Passing two arguments to area method
>>> bg = BaseGeometry()
>>> bg.area(5, 5)
    TypeError: area() takes 1 positional argument but 3 were given

---------------------------------------------------------------------------------------

Testcase 12: Passing tuple to method
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", (4,))
    TypeError: age must be an integer

---------------------------------------------------------------------------------------

Testcase 13: Passing list to method
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [3])
    TypeError: age must be an integer

--------------------------------------------------------------------------------------

Testcase 14: Passing dict to method
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {3, 4})
    TypeError: age must be an integer

-------------------------------------------------------------------------------------

Testcase 15: Passing None to method
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", None)
    TypeError: age must be an integer

-------------------------------------------------------------------------------------
